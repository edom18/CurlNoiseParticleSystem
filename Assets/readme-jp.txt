/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_
// CurlNoise Particle System
// c 2018 Kazuya Hiruma
// Version 1.0.0
/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_

CurlNoise Particle Systemは、GPUベースのカールノイズを利用したパーティクルシステムです。
カールノイズに対するパラメータを設定することで、色々な動きを調整することができます。

=====================================================================================
## 更新履歴

Version 1.0.0:
- First Release
=====================================================================================


## 使い方

### セットアップ

シーンにオブジェクトプールの機能を持つ「CurlParticleSystem」プレハブを配置します。
CurlParticleSystemはパーティクルの生成を担う「CurlParticle」プレハブの参照を保持しています。
インスペクタから設定できる「Limit」の数だけプレハブをインスタンス化し、それを上限としてパーティクルを利用することができます。


### プロファイルオブジェクト

パーティクルの設定はスクリプタブルオブジェクトの「CurlParticleProfile」を利用して行います。
各パラメータの詳細な説明は省略させてください。

このパラメータ郡は、パーティクルの動きを制御する目的で利用します。
「CurlParticle」コンポーネントの「Show Gizmos」をオンにすると、これらパラメータの内容を視覚化することができます。


#### タイプ「Normal」と「Fake」

プロファイルオブジェクトの上部に、カールノイズのタイプを選択する項目があります。
これは、「Normal」のほうが本来のカールノイズの計算式に則った計算を行ったものです。
一方、「Fake」のほうはやや計算方法を変えたものになっています。
本来の実装方法からすると異なるものですが、動きが異なります。好みに合わせて使い分けてください。

アセット内に、それぞれのタイプに応じた適切な値が設定されたプロファイルがあるので、それを元に改変を行ってください。


### エミッターについて

アセットには標準で、通常のパーティクルを生成する「CurlParticleEmitter」と、指定したメッシュの頂点からパーティクルを生成する「ShapeEmitter」、そして移動距離に応じてパーティクルをエミットする「DistanceEmitter」の3種類を用意しています。
この3つどれもが、「CurlParticle」を用途別に利用したラッパーになっているので、「CurlParticle」を直に利用してカスタムのパーティクルシステムを構築することもできます。